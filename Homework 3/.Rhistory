library(readr)
data <- read_csv("C:/Users/Rob/Desktop/Dropbox/UCSD/16 - Winter 2017/MATH289/data.csv")
View(data)
source('~/MATH189-289/Homework 3/scenario_2.R', echo=TRUE)
source('~/MATH189-289/Homework 3/scenario_2.R', echo=TRUE)
NormalPair <- convolve(NormalSpacing, c(1, 1), conj = FALSE, type = "filter")
NormalPair
save_resolved_hists(NormalPair,"Pair - Spacing Between Normally Distributed Palindrome Pairs","Pair Spacing","Count",7500)
save_overlay(c(PairSpacing, UniformPair, DoublePair, NormalPair),
"Pair - Spacing Densities of CMV DNA vs. Simulated Palindrome Pairs",
"Pair Spacing",
"Density",
7500)
save_resolved_hists(NormalPair,"Pair - Spacing Between Normally Distributed Palindrome Pairs","Pair Spacing","Count",7500)
source('~/MATH189-289/Homework 3/scenario_2.R', echo=TRUE)
trimmedUnif <- UniformSpacing
trimmedUnif[trimmedUnif>5000] <- NA
trimmedCMV <- Spacing
trimmedCMV[trimmedCMV>5000] <- NA
r <- mean(trimmedCMV, na.rm = TRUE)/mean(trimmedUnif, na.rm = TRUE)
pf(r,length(trimmedCMV),length(trimmedUnif))
png("qqplot_normal.png", units="in", height = 10, width = 15, res=300)
qqplot(trimmedCMV,trimmedUnif, main="Q-Q Plot Comparing Distributions", xlab="Spacing Between Normally Distributed Palindromes",ylab="Spacing Between Uniformly Distributed Palindromes")
abline(0,1, col=2)
dev.off()
trimmedUnif <- UniformSpacing
trimmedUnif[trimmedUnif>5000] <- NA
trimmedCMV <- Spacing
trimmedCMV[trimmedCMV>5000] <- NA
r <- mean(trimmedCMV, na.rm = TRUE)/mean(trimmedUnif, na.rm = TRUE)
pf(r,length(trimmedCMV),length(trimmedUnif))
png("qqplot_cmvdna.png", units="in", height = 10, width = 15, res=300)
qqplot(trimmedCMV,trimmedUnif, main="Q-Q Plot Comparing Distributions", xlab="Spacing Between Normally Distributed Palindromes",ylab="Spacing Between Uniformly Distributed Palindromes")
abline(0,1, col=2)
dev.off()
trimmedUnif <- UniformSpacing
trimmedUnif[trimmedUnif>5000] <- NA
trimmedNorm[trimmedNorm>5000] <- NA
trimmedNorm <- NormalSpacing
r <- mean(trimmedNorm, na.rm = TRUE)/mean(trimmedUnif, na.rm = TRUE)
pf(r,length(trimmedNorm),length(trimmedUnif))
png("qqplot_normal.png", units="in", height = 10, width = 15, res=300)
qqplot(trimmedNorm,trimmedUnif, main="Q-Q Plot Comparing Distributions", xlab="Spacing Between Normally Distributed Palindromes",ylab="Spacing Between Uniformly Distributed Palindromes")
abline(0,1, col=2)
dev.off()
r
png("qqplot_cmvdna.png", units="in", height = 10, width = 15, res=300)
qqplot(trimmedCMV,trimmedUnif, main="Q-Q Plot Comparing Distributions", xlab="Spacing Between CMV DNA Distributed Palindromes",ylab="Spacing Between Uniformly Distributed Palindromes")
abline(0,1, col=2)
dev.off()
trimmedUnif <- UniformSpacing
trimmedUnif[trimmedUnif>5000] <- NA
trimmedNorm <- NormalSpacing
trimmedNorm[trimmedNorm>5000] <- NA
r <- mean(trimmedNorm, na.rm = TRUE)/mean(trimmedUnif, na.rm = TRUE)
pf(r,length(trimmedNorm),length(trimmedUnif))
png("qqplot_normal.png", units="in", height = 10, width = 15, res=300)
qqplot(trimmedNorm,trimmedUnif, main="Q-Q Plot Comparing Distributions", xlab="Spacing Between Normally Distributed Palindromes",ylab="Spacing Between Uniformly Distributed Palindromes")
abline(0,1, col=2)
dev.off()
trimmedUnif <- UniformPair
trimmedUnif[trimmedUnif>5000] <- NA
trimmedCMV <- PairSpacing
trimmedCMV[trimmedCMV>5000] <- NA
r <- mean(trimmedCMV, na.rm = TRUE)/mean(trimmedUnif, na.rm = TRUE)
pf(r,length(trimmedCMV),length(trimmedUnif))
png("qqplot_cmvdna_gamma.png", units="in", height = 10, width = 15, res=300)
qqplot(trimmedCMV,trimmedUnif, main="Q-Q Plot Comparing Distributions", xlab="Spacing Between CMV DNA Distributed Palindromes",ylab="Spacing Between Uniformly Distributed Palindromes")
abline(0,1, col=2)
dev.off()
trimmedUnif <- UniformPair
trimmedUnif[trimmedUnif>5000] <- NA
trimmedCMV <- PairSpacing
trimmedCMV[trimmedCMV>5000] <- NA
r <- mean(trimmedCMV, na.rm = TRUE)/mean(trimmedUnif, na.rm = TRUE)
pf(r,length(trimmedCMV),length(trimmedUnif))
png("qqplot_cmvdna_gamma.png", units="in", height = 10, width = 15, res=300)
qqplot(trimmedCMV,trimmedUnif, main="Q-Q Plot Comparing Distributions", xlab="Spacing Between CMV DNA Distributed Palindromes Pairs",ylab="Spacing Between Uniformly Distributed Palindrome Pairs")
abline(0,1, col=2)
dev.off()
source('~/MATH189-289/Homework 3/scenario_2.R', echo=TRUE)
png("QQ Plot CMV DNA Location vs Uniform.png", units="in", height = 10, width = 15, res=300)
qqplot(Location,UniformSimulated, main="Q-Q Plot Comparing Distributions", xlab="Location of CMV DNA Palindromes",ylab="Location of Uniformly Distributed Palindromes")
abline(0,1, col=2)
dev.off()
p <- (1:N-1)/N
p
dgamma(p, 3, rate = mean(UniformSpacing), log = FALSE)
plot(dgamma(p, 3, rate = mean(UniformSpacing), log = FALSE))
n
p <- (1:n-1)/n
plot(dgamma(p, 3, rate = mean(UniformSpacing), log = FALSE))
gam <- dgamma(p, 3, rate = mean(UniformSpacing), log = FALSE))
gam <- dgamma(p, 3, rate = mean(UniformSpacing), log = FALSE)
p <- (1:n-1)/n
gam <- dgamma(p, 3, rate = mean(UniformSpacing), log = FALSE)
png("QQ Plot CMV DNA Pair Spacing vs Gamma.png", units="in", height = 10, width = 15, res=300)
qqplot(gam,UniformTrip, main="Q-Q Plot Comparing Distributions", xlab="Spacing Between CMV DNA Distributed Palindromes Pairs",ylab="Spacing Between Uniformly Distributed Palindrome Pairs")
abline(0,1, col=2)
dev.off()
p <- (1:n-1)/n
gam <- dgamma(p, 3, rate = mean(UniformSpacing), log = FALSE)
png("QQ Plot CMV DNA Triplet Spacing vs Gamma.png", units="in", height = 10, width = 15, res=300)
qqplot(gam,UniformTrip, main="Q-Q Plot Comparing Distributions", xlab="Spacing Between CMV DNA Distributed Palindromes Pairs",ylab="Spacing Between Uniformly Distributed Palindrome Pairs")
abline(0,1, col=2)
dev.off()
gam <- dgamma(p, 3, rate = 1/mean(UniformSpacing), log = FALSE)
plot(gam)
plot(UniformTrip)
hist(UniformTrip)
gam <- dgamma(p, 3, rate = mean(UniformSpacing), log = FALSE)
hist(gam)
hist(UniformTrip)
gam <- dgamma(p, 2, rate = mean(UniformSpacing), log = FALSE)
hist(gam)
?dgamma
gam <- dgamma(p, 3, rate = mean(UniformSpacing), log = TRUE)
hist(gam)
gam <- dgamma(p, 3, rate = mean(UniformSpacing), log = FALSE)
?dgamma
gam <- dgamma(p, shape = 3, scale = mean(UniformSpacing), log = FALSE)
hist(gam)
hist(UniformTrip)
png("QQ Plot CMV DNA Triplet Spacing vs Gamma.png", units="in", height = 10, width = 15, res=300)
qqplot(gam,UniformTrip, main="Q-Q Plot Comparing Distributions", xlab="Spacing Between CMV DNA Distributed Palindromes Pairs",ylab="Spacing Between Uniformly Distributed Palindrome Pairs")
abline(0,1, col=2)
dev.off()
gam <- dgamma(p, shape = 3, scale = mean(UniformSpacing), log = TRUE)
hist(gam)
gam <- dgamma(p, shape = 3, scale = mean(UniformSpacing), log = FALSE)
hist(gam)
hist(UniformTrip)
hist(gam)
hist(UniformTrip)
qqplot(gam,UniformTrip, main="Q-Q Plot Comparing Distributions", xlab="Spacing Between CMV DNA Distributed Palindromes Pairs",ylab="Spacing Between Uniformly Distributed Palindrome Pairs")
abline(0,1, col=2)
qqplot(UniformTrip,gam, main="Q-Q Plot Comparing Distributions", xlab="Spacing Between CMV DNA Distributed Palindromes Pairs",ylab="Spacing Between Uniformly Distributed Palindrome Pairs")
abline(0,1, col=2)
gam <- dgamma(p, shape = 3, scale = mean(UniformSpacing), log = FALSE)
hist(gam)
hist(UniformTrip)
hist(gam)
hist(UniformTrip)
hist(gam)
hist(UniformTrip)
png("QQ Plot CMV DNA Triplet Spacing vs Uniform Triplet Spacing.png", units="in", height = 10, width = 15, res=300)
qqplot(TripSpacing,UniformTrip, main="Q-Q Plot Comparing Distributions", xlab="Spacing Between CMV DNA Distributed Palindromes Triplets",ylab="Spacing Between Uniformly Distributed Palindrome Triplets")
abline(0,1, col=2)
dev.off()
Location
CMVStrand = 1:N
CMVSTrang
CMVStrand
CMVStrand = numeric(N)
CMVStrand
CMVStrand[Location] = 1
CMVStrand
CMVStrand = numeric(N)
CMVStrand[Location] = 1
SlidingSum <- convolve(CMVStrand, rep(1L, 150), conj = FALSE, type = "filter")
plot(SlidingSum)
png("slidesum.png", units="in", height = 10, width = 15, res=300)
plot(SlidingSum)
dev.off()
?lines
png("slidesum.png", units="in", height = 10, width = 15, res=300)
lines(SlidingSum)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
png("slidesum.png", units="in", height = 10, width = 15, res=300)
lines(SlidingSum)
dev.off()
